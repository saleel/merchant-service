enum TokenStandard {
  Erc721
  Erc20
}

enum OrderStatus {
  Pending
  Complete
}

type Product {
  id: String!
  name: String!
  description: String
  imageUrl: String
  tokenStandard: TokenStandard!
  contractAddress: String!
  tokenId: String
  availableQuantity: Int!
  price: Float!
  createdAt: Int!
  updatedAt: Int!
}

input ProductInput {
  name: String!
  description: String
  imageUrl: String
  tokenStandard: TokenStandard!
  contractAddress: String!
  tokenId: String
  availableQuantity: Int!
  price: Float!
}

input EditProductInput {
  name: String!
  description: String
  imageUrl: String
  availableQuantity: Int!
  price: Float!
}

type Order {
  id: String
  product: Product
  quantity: Float
  buyerAddress: String
  buyerTransaction: String
  sellerTransaction: String
  amount: Float
  status: OrderStatus
  createdAt: Int!
  updatedAt: Int!
}

input CreateOrderInput {
  productId: String!
  quantity: Float!
  buyerAddress: String!
  buyerTransaction: String!
  atomicSwapSalt: Int!
}

type Query {
  findProducts: [Product]
  getOrder(id: String): Order
  findOrders(status: OrderStatus): [Order]
}

type Mutation {
  createProduct(product: ProductInput) : Product
  editProduct(id: String, productData: EditProductInput) : Product
  createOrder(order: CreateOrderInput) : Order
}